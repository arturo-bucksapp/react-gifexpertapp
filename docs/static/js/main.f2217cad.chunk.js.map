{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAahD,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKhB,UACE,6BAAMD,IACN,uBACEQ,KAAK,OACLC,MAAUT,EACVU,SAfoB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,c,+BCP7CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACN,mCACTC,EAFe,uDACN,mCADM,cAEmDC,UAAUH,GAF7D,sBAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GACtB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVhB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEpC,OACE,sBAAKc,UAAU,gDAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GACJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGf,CAACpB,IAEIqB,EDd0BK,CAAa1B,GAAjCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAErB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADGA,EAAIC,aEfbgB,EAAe,WAAO,IAAD,EAEIzC,mBAAS,CAAC,KAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAIhC,OACE,gCACE,oDACE,cAAC,EAAD,CAAaA,cAAiBA,IAChC,uBAEA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAaA,GADLA,Y,MCbtB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2217cad.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => setInputValue(e.target.value)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(inputValue.trim().length > 2){\n      setCategories( cats => [inputValue ,...cats]); //spread operator\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <h1>{ inputValue }</h1>\n      <input\n        type=\"text\"\n        value = { inputValue }\n        onChange = { handleInputChange }\n        />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\n\n","export const getGifs = async(category) => {\n  const apiKey = 'hsqe4aOpAdWN2nzb4d1ZzLEVxsQUci5B'\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map ( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  })\n\n  // console.log(gifs);\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => { //desestructuracion\n\n  return (\n    <div className='card animate__animated animate__fadeInDownBig'>\n      <img src={ url } alt={title}/>\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n  //para renombrar data --> data:image\n  const { data:images, loading } = useFetchGifs(category); //desestructuracion\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'> { category } </h3>\n      { loading && <p>Loading</p> }\n\n      <div className='card-grid'>\n        {\n          images.map( img => (\n            <GifGridItem\n              key = { img.id }\n              { ...img }\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n// custom hooks\nexport const useFetchGifs = (category) => {\n\n  const [state, setstate] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => { //SE VA DISPARAR UNA SOLA VEZ\n    getGifs(category)\n      .then(imgs => {\n        setstate({\n          data: imgs,\n          loading: false\n        })\n      })\n  },[category])\n\n  return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['']);\n\n  return (\n    <div>\n      <h2>Search Images here</h2>\n        <AddCategory setCategories= { setCategories } />\n      <hr />\n\n      <ol>\n        {\n          categories.map(category =>\n            <GifGrid\n              key = { category }\n              category = { category }\n            />\n          )\n        }\n      </ol>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}